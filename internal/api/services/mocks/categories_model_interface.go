// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	models "become_better/internal/api/models"
	context "context"

	mock "github.com/stretchr/testify/mock"

	pgxpool "github.com/jackc/pgx/v5/pgxpool"
)

// CategoriesModelInterface is an autogenerated mock type for the CategoriesModelInterface type
type CategoriesModelInterface struct {
	mock.Mock
}

// GetCategories provides a mock function with given fields: ctx, pool
func (_m *CategoriesModelInterface) GetCategories(ctx context.Context, pool *pgxpool.Pool) ([]models.Categories, error) {
	ret := _m.Called(ctx, pool)

	if len(ret) == 0 {
		panic("no return value specified for GetCategories")
	}

	var r0 []models.Categories
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *pgxpool.Pool) ([]models.Categories, error)); ok {
		return rf(ctx, pool)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *pgxpool.Pool) []models.Categories); ok {
		r0 = rf(ctx, pool)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Categories)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *pgxpool.Pool) error); ok {
		r1 = rf(ctx, pool)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCategoriesModelInterface creates a new instance of CategoriesModelInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCategoriesModelInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CategoriesModelInterface {
	mock := &CategoriesModelInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
