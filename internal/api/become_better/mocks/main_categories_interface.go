// Code generated by mockery v2.50.0. DO NOT EDIT.

package mocks

import (
	become_better "become_better/gen/become_better"
	context "context"

	mock "github.com/stretchr/testify/mock"

	pgxpool "github.com/jackc/pgx/v5/pgxpool"
)

// MainCategoriesInterface is an autogenerated mock type for the MainCategoriesInterface type
type MainCategoriesInterface struct {
	mock.Mock
}

// MainCategories provides a mock function with given fields: ctx, pool
func (_m *MainCategoriesInterface) MainCategories(ctx context.Context, pool *pgxpool.Pool) ([]*become_better.MainCategories, error) {
	ret := _m.Called(ctx, pool)

	if len(ret) == 0 {
		panic("no return value specified for MainCategories")
	}

	var r0 []*become_better.MainCategories
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *pgxpool.Pool) ([]*become_better.MainCategories, error)); ok {
		return rf(ctx, pool)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *pgxpool.Pool) []*become_better.MainCategories); ok {
		r0 = rf(ctx, pool)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*become_better.MainCategories)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *pgxpool.Pool) error); ok {
		r1 = rf(ctx, pool)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMainCategoriesInterface creates a new instance of MainCategoriesInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMainCategoriesInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MainCategoriesInterface {
	mock := &MainCategoriesInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
